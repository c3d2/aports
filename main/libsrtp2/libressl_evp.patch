diff --git a/crypto/hash/hmac_ossl.c b/crypto/hash/hmac_ossl.c
index f99646b..ce91b3d 100644
--- a/crypto/hash/hmac_ossl.c
+++ b/crypto/hash/hmac_ossl.c
@@ -76,7 +76,7 @@ static srtp_err_status_t srtp_hmac_alloc (srtp_auth_t **a, int key_len, int out_
 
 /* OpenSSL 1.1.0 made HMAC_CTX an opaque structure, which must be allocated
    using HMAC_CTX_new.  But this function doesn't exist in OpenSSL 1.0.x. */
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || OPENSSL_VERSION_NUMBER >= 0x20000000L
     {
         /* allocate memory for auth and HMAC_CTX structures */
         uint8_t* pointer;
@@ -121,7 +121,7 @@ static srtp_err_status_t srtp_hmac_dealloc (srtp_auth_t *a)
 
     hmac_ctx = (HMAC_CTX*)a->state;
 
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || OPENSSL_VERSION_NUMBER >= 0x20000000L
     HMAC_CTX_cleanup(hmac_ctx);
 
     /* zeroize entire state*/
diff --git a/crypto/include/sha1.h b/crypto/include/sha1.h
index 3dc8d91..f329c2d 100644
--- a/crypto/include/sha1.h
+++ b/crypto/include/sha1.h
@@ -81,7 +81,7 @@ extern "C" {
 
 /* OpenSSL 1.1.0 made EVP_MD_CTX an opaque structure, which must be allocated
    using EVP_MD_CTX_new. But this function doesn't exist in OpenSSL 1.0.x. */
-#if OPENSSL_VERSION_NUMBER < 0x10100000L
+#if OPENSSL_VERSION_NUMBER < 0x10100000L || OPENSSL_VERSION_NUMBER >= 0x20000000L
 
 typedef EVP_MD_CTX srtp_sha1_ctx_t;
 
